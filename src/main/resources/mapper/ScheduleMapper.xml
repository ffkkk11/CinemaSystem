<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mju.dao.ScheduleDao">

    <resultMap id="schedule" type="Schedule">
        <id property="scheduleId" column="scheduleId"/>
        <result property="roomId" column="roomId"/>
        <result property="roomName" column="roomName"/>
        <result property="movieId" column="movieId"/>
        <result property="movieName" column="movieName"/>
        <result property="beginTime" column="beginTime"/>
        <result property="bTime" column="bTime"/>
        <result property="price" column="price"/>
        <result property="status" column="status"/>
        <result property="moviePic" column="moviePic"/>
    </resultMap>

    <select id="queryNewSchedule" resultMap="schedule">
        select s.*,m.movieName,r.roomName,c.cinemaId,c.cinemaName,DATE_FORMAT(s.beginTime,'%Y-%m-%d %H:%i') as bTime,m.pic as moviePic,m.info as movieInfo
        from t_schedule as s
        left JOIN t_movie as m on s.movieId = m.movieId
        left JOIN t_room as r on r.roomId = s.roomId
        LEFT JOIN t_cinema as c on c.cinemaId = r.cinemaId
        WHERE beginTime > now() AND status = true
        ORDER by s.beginTime asc
    </select>

    <select id="querySchedule" resultMap="schedule" parameterType="map">
        select s.*,m.movieName,r.roomName,c.cinemaId,c.cinemaName,DATE_FORMAT(s.beginTime,'%Y-%m-%d %H:%i') as bTime,m.pic as moviePic,m.info as movieInfo
        from t_schedule as s
        left JOIN t_movie as m on s.movieId = m.movieId
        left JOIN t_room as r on r.roomId = s.roomId
        LEFT JOIN t_cinema as c on c.cinemaId = r.cinemaId
        <where>
            <if test="roomName != null">
                AND roomName like '%${roomName}%'
            </if>
            <if test="movieName != null">
                AND movieName LIKE '%${movieName}%'
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
        ORDER by s.beginTime asc
        limit #{offset},#{perPage}

    </select>

    <select id="selectScheduleById" resultMap="schedule" parameterType="int">
        select s.*,m.movieName,r.roomName,c.cinemaId,c.cinemaName,DATE_FORMAT(s.beginTime,'%Y-%m-%d %H:%i') as bTime,m.pic as moviePic,m.info as movieInfo
        from t_schedule as s
        left JOIN t_movie as m on s.movieId = m.movieId
        left JOIN t_room as r on r.roomId = s.roomId
        LEFT JOIN t_cinema as c on c.cinemaId = r.cinemaId
        where scheduleId = #{scheduleId} limit 1
    </select>

    <select id="countOfSchedule" resultType="int" parameterType="map">
        SELECT COUNT(1)
        FROM t_schedule
        <where>
            <if test="roomName != null">
                AND roomName like '%${roomName}%'
            </if>
            <if test="movieName != null">
                AND movieName LIKE '%${movieName}%'
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
    </select>

    <insert id="insertSchedule" parameterType="schedule">
        insert into t_schedule(scheduleId,roomId,movieId,beginTime,price,status)
        values(#{scheduleId},#{roomId},#{movieId},#{beginTime},#{price},#{status})
    </insert>

    <delete id="deleteSchedule" parameterType="int">
        delete from t_schedule where scheduleId = #{scheduleId}
    </delete>

    <update id="updateSchedule" parameterType="schedule">
        UPDATE `t_schedule`
        SET
         `movieId` = #{movieId},
         `beginTime` = #{beginTime},
         `price` = #{price},
         `status` = #{status},
         `roomId` = #{roomId}
        WHERE
            `scheduleId` = #{scheduleId}
    </update>
</mapper>